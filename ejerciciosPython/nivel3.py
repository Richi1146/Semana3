# 游댮 Nivel Avanzado

#     Validar contrase침a segura
#     Escribe una funci칩n que valide si una contrase침a cumple con requisitos de seguridad (may칰sculas, min칰sculas, n칰meros y s칤mbolos).
#     Simular dado
#     Crea una funci칩n que simule el lanzamiento de un dado de 6 caras.

#     Suma de elementos 칰nicos
#     Escribe una funci칩n que reciba una lista de n칰meros y devuelva la suma de los elementos 칰nicos.

#     Generador de contrase침as
#     Crea una funci칩n que genere una contrase침a aleatoria de una longitud dada.

#     Composici칩n de funciones
#     Escribe una funci칩n que reciba otra funci칩n como par치metro y aplique una composici칩n de funciones.
import random
import re

def validarcontrase침a(contrase침a):
    if (len(contrase침a) >= 8 and
        re.search(r"[A-Z]", contrase침a) and
        re.search(r"[a-z]", contrase침a) and
        re.search(r"\d", contrase침a) and
        re.search(r"[!@#$%^&*()-=+{};:,<.>]", contrase침a)):
        return True
    else:
        return False

if validarcontrase침a("Hola123*"):
    print("Contrase침a segura.")
else:
    print("La contrase침a no cumple con los requisitos de seguridad.")

def list_num(list):
    list2 = []
    for x in list:
        if list.count(x) == 1:
            list2.append(x)
            suma = sum(list2)
    print(suma)

list1 = [2,4,6,8,1,1,2,2]
list_num(list1)

def dados():
    return random.randint(1,6)
print(dados())

def compose(func1, func2, valor):
    return func1+func2+valor
 
def func1():
    return 1+1

def func2():
    return 2

print(compose(func1(),func2(),4))